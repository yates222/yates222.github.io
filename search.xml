<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>soap协议接口的调用方法</title>
      <link href="/2021/11/24/soap%E5%8D%8F%E8%AE%AE%E6%8E%A5%E5%8F%A3%E7%9A%84%E8%B0%83%E7%94%A8%E6%96%B9%E6%B3%95/"/>
      <url>/2021/11/24/soap%E5%8D%8F%E8%AE%AE%E6%8E%A5%E5%8F%A3%E7%9A%84%E8%B0%83%E7%94%A8%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h3 id="一、简介"><a href="#一、简介" class="headerlink" title="一、简介"></a>一、简介</h3><p>soap是一种轻型的，基于XML的数据交换协议，它在底层仍然使用http协议传输，但是与http的请求包不同，http传递的是http文本，soap传递的是结构化的数据。虽然如今已经是http和json的天下，使用soap协议的webservice也有些过时了，但是由于其安全性和底层可扩展的特性，仍然有一部分企业在使用。</p><h3 id="二、XML的简单介绍"><a href="#二、XML的简单介绍" class="headerlink" title="二、XML的简单介绍"></a>二、XML的简单介绍</h3><p>XML是一种可扩展的标记语言，类似于HTML，但是与HTML的用途不一样。HTML用于页面的展示，其标签是预先被设计好的，用户根据标签的功能选择使用，以便设计出预期的页面。XML是为了数据的传输而设计的，其标签没有被预定义，使用者需要自己定义标签。可以认为XML就是一种纯文本，没有任何其他的功能。</p><p>在XML中，由于标签都是开发者自己定义的，如果两份xml文档出现含义不同的相同名称的标签，将会发生命名冲突，导致XML解析器无法解析，例如：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">apple</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">color</span>&gt;</span>red<span class="tag">&lt;/<span class="name">color</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">producer</span>&gt;</span>ShanXi<span class="tag">&lt;/<span class="name">producer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">apple</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">apple</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">business</span>&gt;</span>electronics<span class="tag">&lt;/<span class="name">business</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">address</span>&gt;</span>California<span class="tag">&lt;/<span class="name">address</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">apple</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>以上两个不同内容与含义的<apple>标签如果一起使用，就会发生命名冲突，解决方法法有两种，一种是添加前缀：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">f:apple</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">f:color</span>&gt;</span>red<span class="tag">&lt;/<span class="name">f:color</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">f:producer</span>&gt;</span>ShanXi<span class="tag">&lt;/<span class="name">f:producer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">f:apple</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">c:apple</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c:business</span>&gt;</span>electronics<span class="tag">&lt;/<span class="name">c:business</span>&gt;</span></span><br><span class="line">&lt;c：address&gt;California<span class="tag">&lt;/<span class="name">c:address</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c:apple</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>通常，使用默认的命名空间可以省去前缀：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">apple</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.apple.com&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">business</span>&gt;</span>electronics<span class="tag">&lt;/<span class="name">business</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">address</span>&gt;</span>California<span class="tag">&lt;/<span class="name">address</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">apple</span>&gt;</span></span><br></pre></td></tr></table></figure><p>命名空间的值一般会使用统一资源标识符，不过很多公司会使用一个真实的URL来指向实际存在的，包含公司信息的网页。需要注意的是，用于标识命名空间的地址不会真的被解析器访问，它的唯一作用就是确定一个唯一的名称。</p><h3 id="三、SOAP语法"><a href="#三、SOAP语法" class="headerlink" title="三、SOAP语法"></a>三、SOAP语法</h3><p>由于SOAP是一种基于XML的通信协议，一条SOAP消息本质上就是一个XML文本，但是它必须含有 Envelope 元素，以便与普通的XML文本区分，即SOAP信息的根元素必须为<a href="soap:Envelope">soap:Envelope</a></soap:Envelope>。此外，请求体<a href="soap:Body">soap:Body</a></soap:Body>元素也是必须的。除了上述两个元素，一条SOAP消息还可以提供包含头部信息的 Header元素和用于处理错误的Fault元素。因此，一条正确的SOAP消息的结构看起来如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">soap:Envelope</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:soap</span>=<span class="string">&quot;http://www.w3.org/2001/12/soap-envelope&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">soap:encodingStyle</span>=<span class="string">&quot;http://www.w3.org/2001/12/soap-encoding&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">soap:Header</span>&gt;</span>头部信息<span class="tag">&lt;/<span class="name">soap:Header</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">soap:Body</span>&gt;</span>请求体<span class="tag">&lt;/<span class="name">soap:Body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">soap:Envelope</span>&gt;</span></span><br></pre></td></tr></table></figure><p>下面解释一下各个元素的用法：</p><p>1、Envelope元素</p><p>前面说过，SOAP语法规定一条SOAP消息必须拥有一个Envelope根元素，而这个根元素又必须与固定的命名空间相关联，在SOAP1.1中，这个命名空间是<a href="http://schemas.xmlsoap.org/soap/envelope%EF%BC%8C%E5%9C%A8SOAP1.2%E4%B8%AD%EF%BC%8C%E8%BF%99%E4%B8%AA%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4%E6%98%AFhttp://www.w3.org/2003/05/soap-envelope%E3%80%82%E5%A6%82%E6%9E%9C%E4%BD%BF%E7%94%A8%E4%BA%86%E4%B8%8D%E5%90%8C%E7%9A%84%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4%EF%BC%8C%E7%A8%8B%E5%BA%8F%E5%B0%86%E6%97%A0%E6%B3%95%E8%AF%86%E5%88%AB%E8%AF%A5%E6%B6%88%E6%81%AF%E3%80%82%E5%9B%A0%E6%AD%A4%EF%BC%8CSOAP%E6%B6%88%E6%81%AF%E7%9A%84Envelope%E6%A0%87%E7%AD%BE%E5%BF%85%E9%A1%BB%E6%9C%89%E5%A6%82%E4%B8%8B%E5%B1%9E%E6%80%A7%EF%BC%9A">http://schemas.xmlsoap.org/soap/envelope，在SOAP1.2中，这个命名空间是http://www.w3.org/2003/05/soap-envelope。如果使用了不同的命名空间，程序将无法识别该消息。因此，SOAP消息的Envelope标签必须有如下属性：</a></p><p>xmlns:soap=”<a href="http://www.w3.org/2001/12/soap-envelope&quot;">http://www.w3.org/2001/12/soap-envelope&quot;</a></p><p>此外还可以指定encodingStyle 属性来定义文档使用的数据类型，但这个属性并非一定要在定义在Envelope标签中，它可以出现在任何标签中，影响范围为该标签和其子标签的内容。</p><p>2、Body元素</p><p>Body元素也是必须要书写的，它包含实际要传输的内容。在Body元素内部我们可以根据服务端的接口文档定义要请求的方法和传递的参数，具体见后文关于WSDL的介绍。</p><p>3、Header元素</p><p>首先，Header元素必须是Encelope元素的第一个子元素，其次，Header元素的子元素必须是一个命名空间。Header元素多数情况下用于传递用户的身份验证信息，例如将token放入其中。</p><h3 id="四、WSDL介绍与实例分析"><a href="#四、WSDL介绍与实例分析" class="headerlink" title="四、WSDL介绍与实例分析"></a>四、WSDL介绍与实例分析</h3><p>WSDL全称Web Services Description Language，即web service的描述语言，用于描述web service定义的方法和属性等。WSDL文档的根元素为<definitions></definitions>，并由以下子元素组成：</p><ul><li>types：定义数据类型</li><li>message：定义将被传输的数据</li><li>portType：设置web service将要执行的操作</li><li>binding：指定web service的通信协议</li></ul><p>在这里我们不详细讨论其语法，主要说一下如何快速找到接口相关的信息。下面通过一个免费的webservice接口具体分析一下用法，接口地址如下：</p><p><a href="http://www.webxml.com.cn/webservices/qqOnlineWebService.asmx?wsdl">http://www.webxml.com.cn/webservices/qqOnlineWebService.asmx?wsdl</a></p><p>这个接口可以通过输入qq号查看该qq号的在线状态。GET请求该接口地址可以获得该地址的WSDL文档。</p><p>首先，最重要的部分是portType元素，name属性给出其名称。该元素下会有<operation></operation>元素，name属性给出操作名称。operation的子元素为input和output，定义输入和输出消息，它们会有一个message属性，指向对应name属性的message元素。可以认为portType定义了一个类（模块），operation是它的函数，带有输入参数input和输出参数output。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">wsdl:portType</span> <span class="attr">name</span>=<span class="string">&quot;qqOnlineWebServiceHttpPost&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">wsdl:operation</span> <span class="attr">name</span>=<span class="string">&quot;qqCheckOnline&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">wsdl:documentation</span> <span class="attr">xmlns:wsdl</span>=<span class="string">&quot;http://schemas.xmlsoap.org/wsdl/&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">h3</span>&gt;</span>获得腾讯QQ在线状态<span class="tag">&lt;/<span class="name">h3</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>输入参数：QQ号码 String，默认QQ号码：8698053。返回数据：String，Y = 在线；N = 离线；E = QQ号码错误；A = 商业用户验证失败；V = 免费用户超过数量<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;/<span class="name">wsdl:documentation</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">wsdl:input</span> <span class="attr">message</span>=<span class="string">&quot;tns:qqCheckOnlineHttpPostIn&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">wsdl:output</span> <span class="attr">message</span>=<span class="string">&quot;tns:qqCheckOnlineHttpPostOut&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">wsdl:operation</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">wsdl:portType</span>&gt;</span></span><br></pre></td></tr></table></figure><p>message元素本身有一个name属性，与input/output相关联，它的子元素为part，定义了参数名和参数类型</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">wsdl:message</span> <span class="attr">name</span>=<span class="string">&quot;qqCheckOnlineHttpPostIn&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">wsdl:part</span> <span class="attr">name</span>=<span class="string">&quot;qqCode&quot;</span> <span class="attr">type</span>=<span class="string">&quot;s:string&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">wsdl:message</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">wsdl:message</span> <span class="attr">name</span>=<span class="string">&quot;qqCheckOnlineHttpPostOut&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">wsdl:part</span> <span class="attr">name</span>=<span class="string">&quot;Body&quot;</span> <span class="attr">element</span>=<span class="string">&quot;tns:string&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">wsdl:message</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>文档中还有一点需要注意，根元素指定了targetNamespace命名空间，这说明WSDL文档声明的所有元素默认属于该命名空间，具体见XML Schema的内容，这里不再赘述。XML Schema为XML文档提供校验，因此SOAP请求的BODY元素的命名空间需要和WSDL文档中targetNamespace命名空间保持一致。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">wsdl:definitions</span> <span class="attr">xmlns:soap</span>=<span class="string">&quot;http://schemas.xmlsoap.org/wsdl/soap/&quot;</span> <span class="attr">xmlns:tm</span>=<span class="string">&quot;http://microsoft.com/wsdl/mime/textMatching/&quot;</span> <span class="attr">xmlns:soapenc</span>=<span class="string">&quot;http://schemas.xmlsoap.org/soap/encoding/&quot;</span> <span class="attr">xmlns:mime</span>=<span class="string">&quot;http://schemas.xmlsoap.org/wsdl/mime/&quot;</span> <span class="attr">xmlns:tns</span>=<span class="string">&quot;http://WebXml.com.cn/&quot;</span> <span class="attr">xmlns:s</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema&quot;</span> <span class="attr">xmlns:soap12</span>=<span class="string">&quot;http://schemas.xmlsoap.org/wsdl/soap12/&quot;</span> <span class="attr">xmlns:http</span>=<span class="string">&quot;http://schemas.xmlsoap.org/wsdl/http/&quot;</span> <span class="attr">xmlns:wsdl</span>=<span class="string">&quot;http://schemas.xmlsoap.org/wsdl/&quot;</span> <span class="attr">targetNamespace</span>=<span class="string">&quot;http://WebXml.com.cn/&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>通过观察文档构造如下请求</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">soap:Envelope</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> <span class="attr">xmlns:xsd</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema&quot;</span> <span class="attr">xmlns:soap</span>=<span class="string">&quot;http://www.w3.org/2003/05/soap-envelope&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">soap:Body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">qqCheckOnline</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://WebXml.com.cn/&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">qqCode</span>&gt;</span>12345678<span class="tag">&lt;/<span class="name">qqCode</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">qqCheckOnline</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">soap:Body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">soap:Envelope</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>返回信息如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">soap:Envelope</span> <span class="attr">xmlns:soap</span>=<span class="string">&quot;http://www.w3.org/2003/05/soap-envelope&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> <span class="attr">xmlns:xsd</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">soap:Body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">qqCheckOnlineResponse</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://WebXml.com.cn/&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">qqCheckOnlineResult</span>&gt;</span>Y<span class="tag">&lt;/<span class="name">qqCheckOnlineResult</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">qqCheckOnlineResponse</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">soap:Body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">soap:Envelope</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="五、使用python发送soap请求"><a href="#五、使用python发送soap请求" class="headerlink" title="五、使用python发送soap请求"></a>五、使用python发送soap请求</h3><p>在查找资料的过程中可以发现，web service的知识总是伴随着java、.net等关键字，部分理论对于非相关开发者来说并不容易理解。对于只关心接口调用的读者来说，前面几章内容均可跳过，因为现在有了一个高度封装的可以用于解析SOAP的python包——Zeep。</p><p>Zeep使用非常简单，直接import即可，以下是对第四章查看qq是否在线的接口的请求：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zeep</span><br><span class="line"></span><br><span class="line">wsdl = <span class="string">&quot;http://www.webxml.com.cn/webservices/qqOnlineWebService.asmx?wsdl&quot;</span></span><br><span class="line">client = zeep.Client(wsdl=wsdl)</span><br><span class="line">client.service.qqCheckOnline(qqCode=<span class="number">12345678</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> soap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的第一次</title>
      <link href="/2021/11/24/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E6%AC%A1/"/>
      <url>/2021/11/24/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E6%AC%A1/</url>
      
        <content type="html"><![CDATA[<p>一直没有写博客的习惯，平时都是在本地笔记本上记一些wiki，但是看着本地笔记塞的越来越多，最早的记录我再翻看已经没有印象了，我想是时候做一些整理和归纳了。</p><span id="more"></span>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
